# This scripts test the various builtin functions.
# Running it requires the following library functions:
# print()
# The builtin functions are as follows
# size(var)
# type(var)
# keys(obj/array)
# values(obj/array)
# array(size) defines an array of size (usually not needed)
# object() defines an object (usually not needed)

fn println(str)
	print(str)
	print('\r\n')
end

fn main()
	println(' # Function     Result')
	
	if size([]) == 0
	and size([0 0 0]) == 3
	and size(['a':4 b:'3']) == 2
	and size('test') == 4
	and size(3) == 1
		println(' 1 size()       OK')
		sizeok = 1
	else
		println(' 1 size()       FAIL')
		sizeok = 0
	end
	
	testa = [1 2 3]
	testb = 'foobar'
	testc = 5
	testd = ['foo':'bar']
	teste = foobar
	
	if type(testa) == 'array' and type([]) == 'array'
	and type(testb) == 'string' and type('test') == 'string'
	and type(testc) == 'number' and type(3.6) == 'number'
	and type(testd) == 'object' and type([9:1]) == 'object'
	and type(teste) == 'auto' and type() == ''
		println(' 2 type()       OK')
		typeok = 1
	else
		println(' 2 type()       FAIL')
		typeok = 0
	end
	
	#keys() places all keys of a given array/object into an array
	if keys([9])[0] == 0
	and keys(['a':1 'b':2])[1] == 'b'
		println(' 3 keys()       OK')
	else
		println(' 3 keys()       FAIL')
	end
	
	#values() places all values of a given array/object into an array
	if values(['test':9])[0] == 9
		println(' 4 values()     OK')
	else
		println(' 4 values()     FAIL')
	end
	
	if typeok
		if type(object()) == 'object'
			println(' 5 object()     OK')
		else
			println(' 5 object()     FAIL')
		end
		
		if sizeok
			if type(array()) == 'array'
			and size(array()) == 0
			and size(array(50)) == 50
				println(' 6 array()      OK')
			else
				println(' 6 array()      FAIL')
			end
		else
			println(' 6 array()      SKIPPED')
		end
	else
		println(' 5 object()     SKIPPED')
		println(' 6 array()      SKIPPED')
	end
end